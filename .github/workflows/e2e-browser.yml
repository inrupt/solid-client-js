name: End-to-end browser tests

on:
  push:

env:
  CI: true
jobs:
  test:
    # Running end-to-end tests requires accessing secrets which aren't available to dependabot.
    # https://github.blog/changelog/2021-02-19-github-actions-workflows-triggered-by-dependabot-prs-will-run-with-read-only-permissions/
    if: github.actor != 'dependabot[bot]'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Available OS's: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        # The Node version does not influence how well our tests run in the browser,
        # so we only need to test in one.
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node${{ runner.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      # Unfortunately `npm ci` regularly fails for reasons outside our control (e.g. network errors),
      # so retry it twice if it fails to avoid those:
      # (No, GitHub Actions at this point in time does not have native retry functionality.)
      - run: npm ci || npm ci || npm ci
      - run: npm run build
      - name: Prepare browser-based end-to-end tests
        run: |
          cd .codesandbox/sandbox
          npm install
          # Install browsers
          npx playwright install
          npx playwright install-deps
          # Run the end-to-end tests against the code in this branch specifically:
          npm install ../../
          cd ../..
      - name: Run browser-based end-to-end tests
        timeout-minutes: 5
        continue-on-error: true
        run: npm run test:e2e:browser
        env:
          E2E_TEST_ESS_IDP_URL: ${{ secrets.E2E_TEST_ESS_PROD_IDP_URL }}
          E2E_TEST_ESS_POD: ${{ secrets.E2E_TEST_ESS_PROD_POD }}
          E2E_TEST_ESS_COGNITO_USER: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_USER }}
          E2E_TEST_ESS_COGNITO_PASSWORD: ${{ secrets.E2E_TEST_ESS_PROD_COGNITO_PASSWORD }}
          E2E_TEST_DEV_NEXT_POD: ${{ secrets.E2E_TEST_DEV_NEXT_POD }}
          E2E_TEST_DEV_NEXT_IDP_URL: ${{ secrets.E2E_TEST_DEV_NEXT_IDP_URL }}
          E2E_TEST_DEV_NEXT_COGNITO_USER: ${{ secrets.E2E_TEST_DEV_NEXT_COGNITO_USER }}
          E2E_TEST_DEV_NEXT_COGNITO_PASSWORD: ${{ secrets.E2E_TEST_DEV_NEXT_COGNITO_PASSWORD }}
      - name: Archive browser-based end-to-end test failure screenshots, if any
        uses: actions/upload-artifact@v2.2.4
        continue-on-error: true
        if: failure()
        with:
          name: e2e-browser-failures
          path: e2e-browser-failures
      - name: Archive browser-based end-to-end test request logs
        uses: actions/upload-artifact@v2.2.4
        continue-on-error: true
        with:
          name: playwright-output
          path: test-results/
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2.2.4
        continue-on-error: true
        if: github.event_name != 'schedule'
        with:
          name: code-coverage-report
          path: coverage
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2.2.4
        continue-on-error: true
        if: github.event_name != 'schedule'
        with:
          name: dist
          path: dist
      - name: Send a notification that the test has failed
        run: "curl -X POST -H Content-type: 'application/json' --data \"{\\\"text\\\":\\\"Automated tests against pod.inrupt.com and inrupt.net failed. View <https://github.com/inrupt/solid-client-js/actions/runs/$RUN_ID|the execution log> for more details.\\\"}\" $WEBHOOK_E2E_FAILURE"
        if: failure() && github.event_name == 'schedule'
        env:
          WEBHOOK_E2E_FAILURE: "${{ secrets.WEBHOOK_E2E_FAILURE }}"
          RUN_ID: "${{ github.run_id }}"
