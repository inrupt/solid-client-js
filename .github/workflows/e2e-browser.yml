name: End-to-end browser tests

on:
  push:

env:
  CI: true
  DEBUG: "pw:webserver"
  ACTIONS_STEP_DEBUG: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

        run: npm ci --ignore-scripts

      - run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist

  test-e2e-browser:
    # Build only has to run in one configuration, and we can test with multiple configs
    # without re-building.
    needs: build
    if: github.actor != 'dependabot[bot]'
    # Ensure we timeout reasonably quickly:
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    environment:
      name: ${{ matrix.environment-name }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        # Available OS's: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
        os: [ubuntu-latest, windows-latest, macos-latest]
        # The Node version does not influence how well our tests run in the browser,
        # so we only need to test in one.
        node-version: [16.x]
        environment-name: ["ESS PodSpaces"]
        experimental: [false]
        include:
          - environment-name: "ESS Dev-Next"
            experimental: true
            node-version: 16.x
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - # FIXME: setup-node's caching seems to not restore correctly: https://github.com/actions/setup-node/pull/323/files
        # if: steps.setup-node.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - run: npm run build
      - run: npx playwright install --with-deps

      - run: npm run test:e2e:browser:build

      - run: npm run test:e2e:browser
        env:
          E2E_TEST_ENVIRONMENT: ${{ matrix.environment-name }}
          E2E_TEST_POD: ${{ secrets.E2E_TEST_POD }}
          E2E_TEST_IDP: ${{ secrets.E2E_TEST_IDP }}
          E2E_TEST_USER: ${{ secrets.E2E_TEST_USER }}
          E2E_TEST_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}

      - name: Archive browser-based end-to-end test request logs
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: playwright-output
          path: test-results/
        # Ensure test recordings are always uploaded if the exist:
        if: ${{ always() }}
