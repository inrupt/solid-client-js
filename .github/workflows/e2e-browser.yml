name: End-to-end browser tests

on:
  push:

env:
  CI: true
  DEBUG: "pw:webserver"
  ACTIONS_STEP_DEBUG: true
jobs:
  build:
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        # FIXME: setup-node's caching seems to not restore correctly: https://github.com/actions/setup-node/pull/323/files
        # if: steps.setup-node.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Build package
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist

  test-e2e-browser:
    needs: build

    # Running end-to-end tests requires accessing secrets which aren't available to dependabot.
    # https://github.blog/changelog/2021-02-19-github-actions-workflows-triggered-by-dependabot-prs-will-run-with-read-only-permissions/
    if: github.actor != 'dependabot[bot]'
    # Ensure we timeout reasonably quickly:
    timeout-minutes: 30

    runs-on: ${{ matrix.os }}
    environment:
      name: ${{ matrix.environment-name }}

    strategy:
      matrix:
        # Available OS's: https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        # The Node version does not influence how well our tests run in the browser,
        # so we only need to test in one.
        node-version: [16.x]
        environment-name:
          - "Inrupt Production"
          - "Inrupt Dev-Next"

    steps:
      - uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        # FIXME: setup-node's caching seems to not restore correctly: https://github.com/actions/setup-node/pull/323/files
        # if: steps.setup-node.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Link built package
        run: npm link

      - name: Prepare browser-based end-to-end tests
        working-directory: .codesandbox/sandbox
        run: |
          npm install --ignore-scripts
          # Run the end-to-end tests against the code in this branch specifically:
          npm link @inrupt/solid-client
          npm run build:e2e

      - name: Setup Playwright
        run: npx playwright install --with-deps

      - name: Run browser-based end-to-end tests
        run: npm run test:e2e:browser
        env:
          E2E_TEST_ENVIRONMENT: ${{ matrix.environment-name }}
          E2E_TEST_POD: ${{ secrets.E2E_TEST_POD }}
          E2E_TEST_IDP: ${{ secrets.E2E_TEST_IDP }}
          E2E_TEST_USER: ${{ secrets.E2E_TEST_USER }}
          E2E_TEST_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}

      - name: Archive browser-based end-to-end test request logs
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: playwright-output
          path: test-results/
        # Ensure test recordings are always uploaded if the exist:
        if: ${{ always() }}

      - name: Send a notification that the test has failed
        run: "curl -X POST -H Content-type: 'application/json' --data \"{\\\"text\\\":\\\"Automated tests against pod.inrupt.com and inrupt.net failed. View <https://github.com/inrupt/solid-client-js/actions/runs/$RUN_ID|the execution log> for more details.\\\"}\" $WEBHOOK_E2E_FAILURE"
        if: failure() && github.event_name == 'schedule'
        env:
          WEBHOOK_E2E_FAILURE: "${{ secrets.WEBHOOK_E2E_FAILURE }}"
          RUN_ID: "${{ github.run_id }}"
